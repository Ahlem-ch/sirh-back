{
    "openapi": "3.0.0",
    "info": {
        "title": "Znaidi Mahdi Starter - Open API",
        "description": "APIs documentation usin OpenAPI",
        "contact": {
            "name": "Znaidi Mahdi",
            "email": "mahdi.znaidi@esprit.tn"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "a local dev server"
        }
    ],
    "paths": {
        "/categories": {
            "get": {
                "tags": [
                    "Categorie"
                ],
                "summary": "List all Categories",
                "operationId": "indexCategorie",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "List All Categories",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "List All Categories",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "List All Categories",
                                            "type": "string",
                                            "example": "categories_list"
                                        },
                                        "data": {
                                            "description": "List All Categories",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Categorie"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Categorie"
                ],
                "summary": "Create a new Categorie",
                "operationId": "storeCategorie",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Categorie"
                },
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Create a new Categorie",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Create a new Categorie",
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "description": "Create a new Categorie",
                                            "type": "string",
                                            "example": "categorie_created"
                                        },
                                        "data": {
                                            "description": "Create a new Categorie",
                                            "items": {
                                                "$ref": "#/components/schemas/Categorie"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        },
        "/categories/{id}": {
            "get": {
                "tags": [
                    "Categorie"
                ],
                "summary": "Show an existing Categorie",
                "operationId": "showCategorie",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Categorie to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Show an existing Categorie",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Show an existing Categorie",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Show an existing Categorie",
                                            "type": "string",
                                            "example": "categorie_details"
                                        },
                                        "data": {
                                            "description": "Show an existing Categorie",
                                            "items": {
                                                "$ref": "#/components/schemas/Categorie"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Categorie"
                ],
                "summary": "Delete an existing Categorie",
                "operationId": "destroyCat",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Categorie to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Delete an existing Categorie",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Delete an existing Categorie",
                                            "type": "integer",
                                            "example": 204
                                        },
                                        "message": {
                                            "description": "Delete an existing Categorie",
                                            "type": "string",
                                            "example": "categorie_deleted"
                                        },
                                        "data": {
                                            "description": "Delete an existing Categorie",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Categorie"
                ],
                "summary": "Update an existing Categorie",
                "operationId": "updateCategories",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of equipe to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Categorie"
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Update an existing Categorie",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Update an existing Categorie",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Update an existing Categorie",
                                            "type": "string",
                                            "example": "categorie_updated"
                                        },
                                        "data": {
                                            "description": "Update an existing Categorie",
                                            "items": {
                                                "$ref": "#/components/schemas/Categorie"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        },
        "/contrats": {
            "get": {
                "tags": [
                    "Contrat"
                ],
                "summary": "List all Contrats",
                "operationId": "indexContrat",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "List All Contrats",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "List All Contrats",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "List All Contrats",
                                            "type": "string",
                                            "example": "contrats_list"
                                        },
                                        "data": {
                                            "description": "List All Contrats",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Contrat"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Contrat"
                ],
                "summary": "Create a new Contrat",
                "operationId": "storeContrat",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Contrat"
                },
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Create a new Contrat",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Create a new Contrat",
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "description": "Create a new Contrat",
                                            "type": "string",
                                            "example": "contrat_created"
                                        },
                                        "data": {
                                            "description": "Create a new Contrat",
                                            "items": {
                                                "$ref": "#/components/schemas/Contrat"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        },
        "/contrats/{id}": {
            "get": {
                "tags": [
                    "Contrat"
                ],
                "summary": "Show an existing Contrat",
                "operationId": "showContrat",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Contrat to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Show an existing Contrat",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Show an existing Contrat",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Show an existing Contrat",
                                            "type": "string",
                                            "example": "contrat_details"
                                        },
                                        "data": {
                                            "description": "Show an existing Contrat",
                                            "items": {
                                                "$ref": "#/components/schemas/Contrat"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Contrat"
                ],
                "summary": "Delete an existing Contrat",
                "operationId": "destroyContrat",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Contrat to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Delete an existing Contrat",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Delete an existing Contrat",
                                            "type": "integer",
                                            "example": 204
                                        },
                                        "message": {
                                            "description": "Delete an existing Contrat",
                                            "type": "string",
                                            "example": "contrat_deleted"
                                        },
                                        "data": {
                                            "description": "Delete an existing Contrat",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Contrat"
                ],
                "summary": "Update an existing Contrat",
                "operationId": "updateContrats",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Contrat to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Contrat"
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Update an existing Contrat",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Update an existing Contrat",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Update an existing Contrat",
                                            "type": "string",
                                            "example": "contrat_updated"
                                        },
                                        "data": {
                                            "description": "Update an existing Contrat",
                                            "items": {
                                                "$ref": "#/components/schemas/Contrat"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        },
        "/departements": {
            "get": {
                "tags": [
                    "Departement"
                ],
                "summary": "List all Departements",
                "operationId": "indexDepartement",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "List All Departements",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "List All Departements",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "List All Departements",
                                            "type": "string",
                                            "example": "departements_list"
                                        },
                                        "data": {
                                            "description": "List All Departements",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Departement"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Departement"
                ],
                "summary": "Create a new Departement",
                "operationId": "storeDepartement",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Departement"
                },
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Create a new Departement",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Create a new Departement",
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "description": "Create a new Departement",
                                            "type": "string",
                                            "example": "departement_created"
                                        },
                                        "data": {
                                            "description": "Create a new Departement",
                                            "items": {
                                                "$ref": "#/components/schemas/Departement"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        },
        "/departements/{id}": {
            "get": {
                "tags": [
                    "Departement"
                ],
                "summary": "Show an existing Departement",
                "operationId": "showDepartement",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Departement to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Show an existing Departement",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Show an existing Departement",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Show an existing Departement",
                                            "type": "string",
                                            "example": "departement_details"
                                        },
                                        "data": {
                                            "description": "Show an existing Departement",
                                            "items": {
                                                "$ref": "#/components/schemas/Departement"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Departement"
                ],
                "summary": "Delete an existing Departement",
                "operationId": "destroyDep",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Departement to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Delete an existing Departement",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Delete an existing Departement",
                                            "type": "integer",
                                            "example": 204
                                        },
                                        "message": {
                                            "description": "Delete an existing Departement",
                                            "type": "string",
                                            "example": "departement_deleted"
                                        },
                                        "data": {
                                            "description": "Delete an existing Departement",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Departement"
                ],
                "summary": "Update an existing Departement",
                "operationId": "updateDepartements",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of equipe to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Departement"
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Update an existing Departement",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Update an existing Departement",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Update an existing Departement",
                                            "type": "string",
                                            "example": "departement_updated"
                                        },
                                        "data": {
                                            "description": "Update an existing Departement",
                                            "items": {
                                                "$ref": "#/components/schemas/Departement"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        },
        "/diplomes": {
            "get": {
                "tags": [
                    "Diplome"
                ],
                "summary": "List all Diplomes",
                "operationId": "indexDiplome",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "List All Diplomes",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "List All Diplomes",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "List All Diplomes",
                                            "type": "string",
                                            "example": "diplomes_list"
                                        },
                                        "data": {
                                            "description": "List All Diplomes",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Diplome"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Diplome"
                ],
                "summary": "Create a new Diplome",
                "operationId": "storeDiplome",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Diplome"
                },
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Create a new Diplome",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Create a new Diplome",
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "description": "Create a new Diplome",
                                            "type": "string",
                                            "example": "Diplome_created"
                                        },
                                        "data": {
                                            "description": "Create a new Diplome",
                                            "items": {
                                                "$ref": "#/components/schemas/Diplome"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        },
        "/diplomes/{id}": {
            "get": {
                "tags": [
                    "Diplome"
                ],
                "summary": "Show an existing Diplome",
                "operationId": "showDiplome",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Diplome to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Show an existing Diplome",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Show an existing Diplome",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Show an existing Diplome",
                                            "type": "string",
                                            "example": "Diplome_details"
                                        },
                                        "data": {
                                            "description": "Show an existing Diplome",
                                            "items": {
                                                "$ref": "#/components/schemas/Diplome"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Diplome"
                ],
                "summary": "Delete an existing Diplome",
                "operationId": "destroyDiplome",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Diplome to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Delete an existing Diplome",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Delete an existing Diplome",
                                            "type": "integer",
                                            "example": 204
                                        },
                                        "message": {
                                            "description": "Delete an existing Diplome",
                                            "type": "string",
                                            "example": "diplome_deleted"
                                        },
                                        "data": {
                                            "description": "Delete an existing Diplome",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Diplome"
                ],
                "summary": "Update an existing Diplome",
                "operationId": "updateDiplomes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of diplome to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Diplome"
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Update an existing Diplome",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Update an existing Diplome",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Update an existing Diplome",
                                            "type": "string",
                                            "example": "diplome_updated"
                                        },
                                        "data": {
                                            "description": "Update an existing Diplome",
                                            "items": {
                                                "$ref": "#/components/schemas/Diplome"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        },
        "/documents": {
            "get": {
                "tags": [
                    "Document"
                ],
                "summary": "List all Documents",
                "operationId": "indexDocument",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "List All Documents",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "List All Documents",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "List All Documents",
                                            "type": "string",
                                            "example": "documents_list"
                                        },
                                        "data": {
                                            "description": "List All Documents",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Document"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Document"
                ],
                "summary": "Create a new Document",
                "operationId": "storeDocument",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Document"
                },
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Create a new Document",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Create a new Document",
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "description": "Create a new Document",
                                            "type": "string",
                                            "example": "Document_created"
                                        },
                                        "data": {
                                            "description": "Create a new Document",
                                            "items": {
                                                "$ref": "#/components/schemas/Document"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        },
        "/documents/{id}": {
            "get": {
                "tags": [
                    "Document"
                ],
                "summary": "Show an existing Document",
                "operationId": "showDocument",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Document to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Show an existing Document",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Show an existing Document",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Show an existing Document",
                                            "type": "string",
                                            "example": "document_details"
                                        },
                                        "data": {
                                            "description": "Show an existing Document",
                                            "items": {
                                                "$ref": "#/components/schemas/Document"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Document"
                ],
                "summary": "Delete an existing Document",
                "operationId": "destroyDocument",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Document to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Delete an existing Document",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Delete an existing Document",
                                            "type": "integer",
                                            "example": 204
                                        },
                                        "message": {
                                            "description": "Delete an existing Document",
                                            "type": "string",
                                            "example": "document_deleted"
                                        },
                                        "data": {
                                            "description": "Delete an existing Document",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Document"
                ],
                "summary": "Update an existing Document",
                "operationId": "updateDocuments",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of equipe to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Document"
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Update an existing Document",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Update an existing Document",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Update an existing Document",
                                            "type": "string",
                                            "example": "document_updated"
                                        },
                                        "data": {
                                            "description": "Update an existing Document",
                                            "items": {
                                                "$ref": "#/components/schemas/Document"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        },
        "/equipes": {
            "get": {
                "tags": [
                    "Equipe"
                ],
                "summary": "List all Equipes",
                "operationId": "index",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "List All Equipes",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "List All Equipes",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "List All Equipes",
                                            "type": "string",
                                            "example": "equipes_list"
                                        },
                                        "data": {
                                            "description": "List All Equipes",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Equipe"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Equipe"
                ],
                "summary": "Create a new Equipe",
                "operationId": "store",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Equipe"
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Create a new Equipe",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Create a new Equipe",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Create a new Equipe",
                                            "type": "string",
                                            "example": "equipe_created"
                                        },
                                        "data": {
                                            "description": "Create a new Equipe",
                                            "items": {
                                                "$ref": "#/components/schemas/Equipe"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        },
        "/equipes/{id}": {
            "get": {
                "tags": [
                    "Equipe"
                ],
                "summary": "Show an existing Equipe",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Contact to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Show an existing Contact",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Show an existing Contact",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Show an existing Contact",
                                            "type": "string",
                                            "example": "contact_details"
                                        },
                                        "data": {
                                            "description": "Show an existing Contact",
                                            "items": {
                                                "$ref": "#/components/schemas/Equipe"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Equipe"
                ],
                "summary": "Delete an existing Equipe",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Equipe to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Delete an existing Equipe",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Delete an existing Equipe",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Delete an existing Equipe",
                                            "type": "string",
                                            "example": "contact_deleted"
                                        },
                                        "data": {
                                            "description": "Delete an existing Equipe",
                                            "items": {
                                                "$ref": "#/components/schemas/Equipe"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Equipe"
                ],
                "summary": "Update an existing Equipe",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of equipe to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Equipe"
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Update an existing Equipe",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Update an existing Equipe",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Update an existing Equipe",
                                            "type": "string",
                                            "example": "equipe_updated"
                                        },
                                        "data": {
                                            "description": "Update an existing Equipe",
                                            "items": {
                                                "$ref": "#/components/schemas/Equipe"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        },
        "/experiences": {
            "get": {
                "tags": [
                    "Experience"
                ],
                "summary": "List all Experiences",
                "operationId": "indexExperience",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "List All Experiences",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "List All Experiences",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "List All Experiences",
                                            "type": "string",
                                            "example": "experiences_list"
                                        },
                                        "data": {
                                            "description": "List All Experiences",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Experience"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Experience"
                ],
                "summary": "Create a new Experience",
                "operationId": "storeExperience",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Experience"
                },
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Create a new Experience",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Create a new Experience",
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "description": "Create a new Experience",
                                            "type": "string",
                                            "example": "experience_created"
                                        },
                                        "data": {
                                            "description": "Create a new Experience",
                                            "items": {
                                                "$ref": "#/components/schemas/Experience"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        },
        "/experiences/{id}": {
            "get": {
                "tags": [
                    "Experience"
                ],
                "summary": "Show an existing Experience",
                "operationId": "showExperience",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Experience to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Show an existing Experience",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Show an existing Experience",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Show an existing Experience",
                                            "type": "string",
                                            "example": "experience_details"
                                        },
                                        "data": {
                                            "description": "Show an existing Experience",
                                            "items": {
                                                "$ref": "#/components/schemas/Experience"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Experience"
                ],
                "summary": "Delete an existing Experience",
                "operationId": "destroyExperience",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Experience to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Delete an existing Experience",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Delete an existing Experience",
                                            "type": "integer",
                                            "example": 204
                                        },
                                        "message": {
                                            "description": "Delete an existing Experience",
                                            "type": "string",
                                            "example": "experience_deleted"
                                        },
                                        "data": {
                                            "description": "Delete an existing Experience",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Experience"
                ],
                "summary": "Update an existing Experience",
                "operationId": "updateExperiences",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Experience to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Experience"
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Update an existing Experience",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Update an existing Experience",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Update an existing Experience",
                                            "type": "string",
                                            "example": "experience_updated"
                                        },
                                        "data": {
                                            "description": "Update an existing Experience",
                                            "items": {
                                                "$ref": "#/components/schemas/Experience"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        },
        "/postes": {
            "get": {
                "tags": [
                    "Poste"
                ],
                "summary": "List all Postes",
                "operationId": "indexPoste",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "List All Postes",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "List All Postes",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "List All Postes",
                                            "type": "string",
                                            "example": "postes_list"
                                        },
                                        "data": {
                                            "description": "List All Postes",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Poste"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Poste"
                ],
                "summary": "Create a new Poste",
                "operationId": "storePoste",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Poste"
                },
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Create a new Poste",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Create a new Poste",
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "description": "Create a new Poste",
                                            "type": "string",
                                            "example": "poste_created"
                                        },
                                        "data": {
                                            "description": "Create a new Poste",
                                            "properties": {
                                                "id": {
                                                    "description": "Create a new Poste",
                                                    "type": "integer"
                                                },
                                                "libelle_poste": {
                                                    "description": "Create a new Poste",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        },
        "/postes/{id}": {
            "get": {
                "tags": [
                    "Poste"
                ],
                "summary": "Show an existing Poste",
                "operationId": "showPoste",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Poste to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Show an existing Poste",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Show an existing Poste",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Show an existing Poste",
                                            "type": "string",
                                            "example": "poste_details"
                                        },
                                        "data": {
                                            "description": "Show an existing Poste",
                                            "items": {
                                                "$ref": "#/components/schemas/Poste"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Poste"
                ],
                "summary": "Delete an existing Poste",
                "operationId": "destroyPoste",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Departement to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Delete an existing Poste",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Delete an existing Poste",
                                            "type": "integer",
                                            "example": 204
                                        },
                                        "message": {
                                            "description": "Delete an existing Poste",
                                            "type": "string",
                                            "example": "poste_deleted"
                                        },
                                        "data": {
                                            "description": "Delete an existing Poste",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Poste"
                ],
                "summary": "Update an existing Poste",
                "operationId": "updatePoste",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of equipe to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Poste"
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Update an existing Poste",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Update an existing Poste",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Update an existing Poste",
                                            "type": "string",
                                            "example": "poste_updated"
                                        },
                                        "data": {
                                            "description": "Update an existing Poste",
                                            "items": {
                                                "$ref": "#/components/schemas/Poste"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        },
        "/postes/adds/users": {
            "put": {
                "tags": [
                    "Poste"
                ],
                "summary": "AffectUser",
                "operationId": "AffectUser",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Poste"
                },
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Create a new Poste",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Create a new Poste",
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "description": "Create a new Poste",
                                            "type": "string",
                                            "example": "poste_created"
                                        },
                                        "data": {
                                            "description": "Create a new Poste",
                                            "properties": {
                                                "id": {
                                                    "description": "Create a new Poste",
                                                    "type": "integer"
                                                },
                                                "libelle_poste": {
                                                    "description": "Create a new Poste",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create a new User",
                "operationId": "storeUser",
                "requestBody": {
                    "$ref": "#/components/requestBodies/User"
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Create a new User",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Create a new User",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Create a new User",
                                            "type": "string",
                                            "example": "user_created"
                                        },
                                        "data": {
                                            "description": "Create a new User",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "List all Users",
                "operationId": "index2",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "List All Users",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "List All Users",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "List All Users",
                                            "type": "string",
                                            "example": "users_list"
                                        },
                                        "data": {
                                            "description": "List All Users",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Show an existing User",
                "operationId": "showUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of User to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Show an existing User",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Show an existing User",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Show an existing User",
                                            "type": "string",
                                            "example": "user_details"
                                        },
                                        "data": {
                                            "description": "Show an existing User",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete an existing User",
                "operationId": "destroyUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of User to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Delete an existing User",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Delete an existing User",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Delete an existing User",
                                            "type": "string",
                                            "example": "user_deleted"
                                        },
                                        "data": {
                                            "description": "Delete an existing User",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        },
        "/update/users/{id}": {
            "patch": {
                "tags": [
                    "User"
                ],
                "summary": "Update an existing User",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of equipe to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/User"
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Update an existing User",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Update an existing User",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Update an existing User",
                                            "type": "string",
                                            "example": "user_updated"
                                        },
                                        "data": {
                                            "description": "Update an existing User",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        },
        "/update/users/affectation/{id}": {
            "patch": {
                "tags": [
                    "User"
                ],
                "summary": "Update an existing User",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of equipe to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/User"
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Update an existing User",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Update an existing User",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Update an existing User",
                                            "type": "string",
                                            "example": "user_updated"
                                        },
                                        "data": {
                                            "description": "Update an existing User",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        },
        "/salaires": {
            "get": {
                "tags": [
                    "Salaire"
                ],
                "summary": "List all Salaires",
                "operationId": "indexSalaire",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "List All Salaires",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "List All Salaires",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "List All Salaires",
                                            "type": "string",
                                            "example": "salaires_list"
                                        },
                                        "data": {
                                            "description": "List All Salaires",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Salaire"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Salaire"
                ],
                "summary": "Create a new Salaire",
                "operationId": "storeSalaire",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Salaire"
                },
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Create a new Salaire",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Create a new Salaire",
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "description": "Create a new Salaire",
                                            "type": "string",
                                            "example": "salaire_created"
                                        },
                                        "data": {
                                            "description": "Create a new Salaire",
                                            "items": {
                                                "$ref": "#/components/schemas/Salaire"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        },
        "/salaires/{id}": {
            "get": {
                "tags": [
                    "Salaire"
                ],
                "summary": "Show an existing Salaire",
                "operationId": "showSalaire",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Salaire to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Show an existing Salaire",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Show an existing Salaire",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Show an existing Salaire",
                                            "type": "string",
                                            "example": "salaire_details"
                                        },
                                        "data": {
                                            "description": "Show an existing Salaire",
                                            "items": {
                                                "$ref": "#/components/schemas/Salaire"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Salaire"
                ],
                "summary": "Delete an existing Salaire",
                "operationId": "destroySalaire",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Salaire to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Delete an existing Salaire",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Delete an existing Salaire",
                                            "type": "integer",
                                            "example": 204
                                        },
                                        "message": {
                                            "description": "Delete an existing Salaire",
                                            "type": "string",
                                            "example": "salaire_deleted"
                                        },
                                        "data": {
                                            "description": "Delete an existing Salaire",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Salaire"
                ],
                "summary": "Update an existing Salaire",
                "operationId": "updateSalaires",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Salaire to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Salaire"
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Update an existing Salaire",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Update an existing Salaire",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Update an existing Salaire",
                                            "type": "string",
                                            "example": "salaire_updated"
                                        },
                                        "data": {
                                            "description": "Update an existing Salaire",
                                            "items": {
                                                "$ref": "#/components/schemas/Salaire"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        },
        "/souscategories": {
            "get": {
                "tags": [
                    "SousCategorie"
                ],
                "summary": "List all SousCategories",
                "operationId": "indexSousCategorie",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "List All SousCategories",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "List All SousCategories",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "List All SousCategories",
                                            "type": "string",
                                            "example": "SousCategories_list"
                                        },
                                        "data": {
                                            "description": "List All SousCategories",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SousCategorie"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "SousCategorie"
                ],
                "summary": "Create a new SousCategorie",
                "operationId": "storeSousCategorie",
                "requestBody": {
                    "$ref": "#/components/requestBodies/SousCategorie"
                },
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Create a new SousCategorie",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Create a new SousCategorie",
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "description": "Create a new SousCategorie",
                                            "type": "string",
                                            "example": "SousCategorie_created"
                                        },
                                        "data": {
                                            "description": "Create a new SousCategorie",
                                            "items": {
                                                "$ref": "#/components/schemas/SousCategorie"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        },
        "/souscategories/{id}": {
            "get": {
                "tags": [
                    "SousCategorie"
                ],
                "summary": "Show an existing SousCategorie",
                "operationId": "showSousCategorie",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of SousCategorie to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Show an existing SousCategorie",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Show an existing SousCategorie",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Show an existing SousCategorie",
                                            "type": "string",
                                            "example": "SousCategorie_details"
                                        },
                                        "data": {
                                            "description": "Show an existing SousCategorie",
                                            "items": {
                                                "$ref": "#/components/schemas/SousCategorie"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "SousCategorie"
                ],
                "summary": "Delete an existing SousCategorie",
                "operationId": "destroySousCat",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of SousCategorie to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Delete an existing SousCategorie",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Delete an existing SousCategorie",
                                            "type": "integer",
                                            "example": 204
                                        },
                                        "message": {
                                            "description": "Delete an existing SousCategorie",
                                            "type": "string",
                                            "example": "SousCategorie_deleted"
                                        },
                                        "data": {
                                            "description": "Delete an existing SousCategorie",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "SousCategorie"
                ],
                "summary": "Update an existing SousCategorie",
                "operationId": "updateSousCategories",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of equipe to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/SousCategorie"
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Update an existing SousCategorie",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Update an existing SousCategorie",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Update an existing SousCategorie",
                                            "type": "string",
                                            "example": "SousCategorie_updated"
                                        },
                                        "data": {
                                            "description": "Update an existing SousCategorie",
                                            "items": {
                                                "$ref": "#/components/schemas/SousCategorie"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        },
        "/types/exp": {
            "get": {
                "tags": [
                    "TypeExperience"
                ],
                "summary": "List all TypeExps",
                "operationId": "indexTypeExp",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "List All TypeExps",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "List All TypeExps",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "List All TypeExps",
                                            "type": "string",
                                            "example": "typeExps_list"
                                        },
                                        "data": {
                                            "description": "List All TypeExps",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TypeExp"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        },
        "/types/{id}/exp": {
            "get": {
                "tags": [
                    "TypeExperience"
                ],
                "summary": "Show an existing TypeExp",
                "operationId": "showTypeExp",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of TypeExp to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Show an existing TypeExp",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Show an existing TypeExp",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Show an existing TypeExp",
                                            "type": "string",
                                            "example": "typeExp_details"
                                        },
                                        "data": {
                                            "description": "Show an existing TypeExp",
                                            "items": {
                                                "$ref": "#/components/schemas/TypeExp"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "TypeExperience"
                ],
                "summary": "Delete an existing TypeExp",
                "operationId": "destroyTypeExp",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of TypeExp to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Delete an existing TypeExp",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Delete an existing TypeExp",
                                            "type": "integer",
                                            "example": 204
                                        },
                                        "message": {
                                            "description": "Delete an existing TypeExp",
                                            "type": "string",
                                            "example": "typeExp_deleted"
                                        },
                                        "data": {
                                            "description": "Delete an existing TypeExp",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "TypeExperience"
                ],
                "summary": "Update an existing TypeExp",
                "operationId": "updateTypeExps",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of equipe to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/TypeExp"
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Update an existing TypeExp",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Update an existing TypeExp",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Update an existing TypeExp",
                                            "type": "string",
                                            "example": "typeExp_updated"
                                        },
                                        "data": {
                                            "description": "Update an existing TypeExp",
                                            "items": {
                                                "$ref": "#/components/schemas/TypeExp"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        },
        "/types/exps": {
            "post": {
                "tags": [
                    "TypeExperience"
                ],
                "summary": "Create a new TypeExp",
                "operationId": "storeTypeExp",
                "requestBody": {
                    "$ref": "#/components/requestBodies/TypeExp"
                },
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Create a new TypeExp",
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "description": "Create a new TypeExp",
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "description": "Create a new TypeExp",
                                            "type": "string",
                                            "example": "typeExp_created"
                                        },
                                        "data": {
                                            "description": "Create a new TypeExp",
                                            "items": {
                                                "$ref": "#/components/schemas/TypeExp"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Password Based": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Categorie": {
                "title": "Categorie",
                "description": "Categorie model",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Categorie ID",
                        "type": "integer",
                        "format": "int"
                    },
                    "libelle": {
                        "title": "string",
                        "description": "Categorie libelle",
                        "type": "string",
                        "format": "string"
                    },
                    "contrats": {
                        "title": "contrats",
                        "description": "Categorie contrat",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Contrat"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Categorie"
                }
            },
            "Contrat": {
                "title": "Contrat",
                "description": "Contrat model",
                "required": [
                    "type"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Contrat ID",
                        "type": "integer",
                        "format": "int"
                    },
                    "type": {
                        "title": "type",
                        "description": "Contrat type",
                        "type": "string",
                        "format": "string"
                    },
                    "date_debut": {
                        "title": "date_debut",
                        "description": "Experience date_debut",
                        "type": "string",
                        "format": "string"
                    },
                    "date_fin": {
                        "title": "date_fin",
                        "description": "Experience date_fin",
                        "type": "string",
                        "format": "string"
                    },
                    "actuel_salaire": {
                        "title": "salaire actuel",
                        "description": "Contrat salaire actuel",
                        "type": "number",
                        "format": "float"
                    },
                    "copie_contrat": {
                        "title": "copie_contrat",
                        "description": "Contrat copie_contrat",
                        "type": "string",
                        "format": "string"
                    },
                    "user": {
                        "title": "user",
                        "description": "Contrat user",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Contrat"
                }
            },
            "Departement": {
                "title": "Departement",
                "description": "Departement model",
                "required": [
                    "libelle_departement"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Departement ID",
                        "type": "integer",
                        "format": "int"
                    },
                    "libelle_departement": {
                        "title": "libelle_departement",
                        "description": "Departement libelle",
                        "type": "string",
                        "format": "string"
                    },
                    "users": {
                        "title": "users",
                        "description": "Departement users",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Departement"
                }
            },
            "Diplome": {
                "title": "Diplome",
                "description": "Diplome model",
                "required": [
                    "libelle_diplome"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Diplome ID",
                        "type": "integer",
                        "format": "int"
                    },
                    "libelle": {
                        "title": "libelle",
                        "description": "Diplome libelle",
                        "type": "string",
                        "format": "string"
                    },
                    "type": {
                        "title": "type",
                        "description": "Diplome type",
                        "type": "string",
                        "format": "string"
                    },
                    "annee": {
                        "title": "annee",
                        "description": "Diplome type",
                        "type": "string",
                        "format": "string",
                        "example": "2019-10-09T00:00:00+00:00"
                    },
                    "user": {
                        "title": "users",
                        "description": "Diplome user",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    },
                    "ecole": {
                        "title": "ecole",
                        "description": "Diplome ecole",
                        "type": "string",
                        "format": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Diplome"
                }
            },
            "Document": {
                "title": "Document",
                "description": "Document model",
                "required": [
                    "libelle_document"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Document ID",
                        "type": "integer",
                        "format": "int"
                    },
                    "libelle_document": {
                        "title": "libelle_document",
                        "description": "Departement libelle",
                        "type": "string",
                        "format": "string"
                    },
                    "type": {
                        "title": "type_departement",
                        "description": "Departement type",
                        "type": "string",
                        "format": "string"
                    },
                    "piece_jointe": {
                        "title": "piece_jointe",
                        "description": "Document piece_jointe",
                        "type": "string",
                        "format": "string"
                    },
                    "user": {
                        "title": "users",
                        "description": "Document users",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Document"
                }
            },
            "Equipe": {
                "title": "Equipe",
                "description": "Equipe model",
                "required": [
                    "nom"
                ],
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "Equipe's ID",
                        "type": "integer",
                        "format": "int"
                    },
                    "nom": {
                        "title": "Nom",
                        "description": "Equipe's nom",
                        "type": "string",
                        "format": "string"
                    },
                    "disponibilite": {
                        "title": "nom",
                        "description": "Equipe's nom",
                        "type": "string",
                        "format": "string",
                        "example": "2019-09-04T00:00:00+00:00"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Equipe"
                }
            },
            "Experience": {
                "title": "Experience",
                "description": "Experience model",
                "required": [
                    "intitule"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Experience ID",
                        "type": "integer",
                        "format": "int"
                    },
                    "intitule": {
                        "title": "intitule",
                        "description": "Experience intitule",
                        "type": "string",
                        "format": "string"
                    },
                    "date_debut": {
                        "title": "date_debut",
                        "description": "Experience date_debut",
                        "type": "string",
                        "format": "string"
                    },
                    "date_fin": {
                        "title": "date_fin",
                        "description": "Experience date_fin",
                        "type": "string",
                        "format": "string"
                    },
                    "user": {
                        "title": "users",
                        "description": "Experience user",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Experience"
                }
            },
            "Poste": {
                "title": "Poste",
                "description": "Poste model",
                "required": [
                    "nom"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Poste ID",
                        "type": "integer",
                        "format": "int"
                    },
                    "libelle_poste": {
                        "title": "libelle_poste",
                        "description": "Poste libelle",
                        "type": "string",
                        "format": "string"
                    },
                    "users": {
                        "title": "users",
                        "description": "Poste users",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Poste"
                }
            },
            "Salaire": {
                "title": "Salaire",
                "description": "Salaire model",
                "required": [
                    "salaire_brut"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Salaire ID",
                        "type": "integer",
                        "format": "int"
                    },
                    "salaire_brut": {
                        "title": "salaire_brut",
                        "description": "Salaire brut",
                        "type": "number",
                        "format": "float"
                    },
                    "salaire_net": {
                        "title": "salaire_net",
                        "description": "Salaire net",
                        "type": "number",
                        "format": "float"
                    },
                    "prime": {
                        "title": "prime",
                        "description": "prime",
                        "type": "number",
                        "format": "float"
                    },
                    "date_debut": {
                        "title": "date_debut",
                        "description": "Salaire date_debut",
                        "type": "string",
                        "format": "string"
                    },
                    "date_fin": {
                        "title": "date_fin",
                        "description": "Salaire date_fin",
                        "type": "string",
                        "format": "string"
                    },
                    "contrat": {
                        "title": "contrat",
                        "description": "Contrat",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Contrat"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Salaire"
                }
            },
            "SousCategorie": {
                "title": "SousCategorie",
                "description": "SousCategorie model",
                "required": [
                    "libelle"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "SousCategorie ID",
                        "type": "integer",
                        "format": "int"
                    },
                    "libelle": {
                        "title": "libelle",
                        "description": "SousCategorie libelle",
                        "type": "string",
                        "format": "string"
                    },
                    "categories": {
                        "title": "categories",
                        "description": "Categorie",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Categorie"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "SousCategorie"
                }
            },
            "TypeExp": {
                "title": "TypeExp",
                "description": "TypeExp model",
                "required": [
                    "libelle"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "TypeExp ID",
                        "type": "integer",
                        "format": "int"
                    },
                    "libelle": {
                        "title": "string",
                        "description": "TypeExp libelle",
                        "type": "integer",
                        "format": "string"
                    },
                    "experiences": {
                        "title": "experiences",
                        "description": "TypeExp experiences",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Experience"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "TypeExp"
                }
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "User id",
                        "type": "integer",
                        "format": "integer"
                    },
                    "email": {
                        "title": "email",
                        "description": "User email",
                        "type": "string",
                        "format": "string"
                    },
                    "matricule_hr": {
                        "title": "matricule_hr",
                        "description": "User matricule_hr",
                        "type": "string",
                        "format": "string"
                    },
                    "nom": {
                        "title": "nom",
                        "description": "User nom",
                        "type": "string",
                        "format": "string"
                    },
                    "prenom": {
                        "title": "prenom",
                        "description": "User prenom",
                        "type": "string",
                        "format": "string"
                    },
                    "adresse": {
                        "title": "adresse",
                        "description": "User adresse",
                        "type": "string",
                        "format": "string"
                    },
                    "num_telephone": {
                        "title": "numéro_téléphone",
                        "description": "User numéro_telephone",
                        "type": "string",
                        "format": "string"
                    },
                    "cin_passport": {
                        "title": "cin_passport",
                        "description": "User cin_passport",
                        "type": "string",
                        "format": "string"
                    },
                    "etat_civil": {
                        "title": "etat_civil",
                        "description": "User etat_civil",
                        "type": "string",
                        "format": "string"
                    },
                    "image": {
                        "title": "image",
                        "description": "User image",
                        "type": "string",
                        "format": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            },
            "CategorieRequestBody": {
                "title": "ContratRequestBody",
                "description": "Contrat model",
                "properties": {
                    "libelle": {
                        "title": "string",
                        "description": "Categorie libelle",
                        "type": "string",
                        "format": "string"
                    },
                    "contrats": {
                        "title": "string",
                        "description": "contrat id",
                        "type": "integer",
                        "format": "int"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Contrat"
                }
            },
            "ContratRequestBody": {
                "title": "ContratRequestBody",
                "description": "Contrat model",
                "properties": {
                    "type": {
                        "title": "type",
                        "description": "Contrat type",
                        "type": "string",
                        "format": "string"
                    },
                    "actuel_salaire": {
                        "title": "salaire actuel",
                        "description": "Contrat salaire actuel",
                        "type": "number",
                        "format": "float"
                    },
                    "copie_contrat": {
                        "title": "copie_contrat",
                        "description": "Contrat copie_contrat",
                        "type": "string",
                        "format": "string"
                    },
                    "user": {
                        "title": "user",
                        "description": "Contrat user",
                        "type": "integer",
                        "format": "int"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Contrat"
                }
            },
            "DepartementRequestBody": {
                "title": "DepartementRequestBody",
                "description": "Departement model",
                "properties": {
                    "libelle_departement": {
                        "title": "libelle_departement",
                        "description": "Departement libelle",
                        "type": "string",
                        "format": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Departement"
                }
            },
            "DiplomeRequestBody": {
                "title": "DiplomeRequestBody",
                "description": "Diplome model",
                "properties": {
                    "libelle": {
                        "title": "libelle",
                        "description": "Diplome libelle",
                        "type": "string",
                        "format": "string"
                    },
                    "type": {
                        "title": "type",
                        "description": "Diplome type",
                        "type": "string",
                        "format": "string"
                    },
                    "annee": {
                        "title": "annee",
                        "description": "Departement type",
                        "type": "string",
                        "format": "string",
                        "example": "2019-10-09T00:00:00+00:00"
                    },
                    "ecole": {
                        "title": "ecole",
                        "description": "Diplome ecole",
                        "type": "string",
                        "format": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Diplome"
                }
            },
            "DocumentRequestBody": {
                "title": "DocumentRequestBody",
                "description": "Document model",
                "properties": {
                    "libelle_document": {
                        "title": "libelle_document",
                        "description": "Document libelle",
                        "type": "string",
                        "format": "string"
                    },
                    "type": {
                        "title": "type_Document",
                        "description": "Document type",
                        "type": "string",
                        "format": "string"
                    },
                    "piece_jointe": {
                        "title": "piece_jointe",
                        "description": "Document piece_jointe",
                        "type": "string",
                        "format": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Document"
                }
            },
            "EquipeRequestBody": {
                "title": "EquipeRequestBody",
                "description": "Equipe model",
                "required": [
                    "nom"
                ],
                "properties": {
                    "nom": {
                        "title": "nom",
                        "description": "Equipe nom",
                        "type": "string"
                    },
                    "disponibilite": {
                        "title": "disponibilite",
                        "description": "Equipe disponibilite",
                        "type": "string",
                        "example": "2019-09-04T00:00:00+00:00"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Equipe"
                }
            },
            "ExperienceRequestBody": {
                "title": "ExperienceRequestBody",
                "description": "Experience model",
                "properties": {
                    "intitule": {
                        "title": "intitule",
                        "description": "Experience intitule",
                        "type": "string",
                        "format": "string"
                    },
                    "date_debut": {
                        "title": "date_debut",
                        "description": "Experience date_debut",
                        "type": "string",
                        "format": "string",
                        "example": "2019-10-14T14:43:45+00:00"
                    },
                    "date_fin": {
                        "title": "date_fin",
                        "description": "Experience date_fin",
                        "type": "string",
                        "format": "string",
                        "example": "2019-10-14T14:43:45+00:00"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Experience"
                }
            },
            "PosteRequestBody": {
                "title": "PostRequestBody",
                "description": "Poste model",
                "properties": {
                    "libelle_poste": {
                        "title": "libelle_poste",
                        "description": "Poste libelle",
                        "type": "string",
                        "format": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Post"
                }
            },
            "SalaireRequestBody": {
                "title": "SalaireRequestBody",
                "description": "Salaire model",
                "properties": {
                    "salaire_brut": {
                        "title": "salaire_brut",
                        "description": "Salaire brut",
                        "type": "number",
                        "format": "float"
                    },
                    "salaire_net": {
                        "title": "salaire_net",
                        "description": "Salaire net",
                        "type": "number",
                        "format": "float"
                    },
                    "prime": {
                        "title": "prime",
                        "description": "prime",
                        "type": "number",
                        "format": "float"
                    },
                    "date_debut": {
                        "title": "date_debut",
                        "description": "Salaire date_debut",
                        "type": "string",
                        "format": "string",
                        "example": "2019-10-02T14:01:17+00:00"
                    },
                    "date_fin": {
                        "title": "date_fin",
                        "description": "Salaire date_fin",
                        "type": "string",
                        "format": "string",
                        "example": "2019-10-02T14:01:17+00:00"
                    },
                    "contrat": {
                        "title": "contrat id",
                        "description": "Contrat id",
                        "type": "integer",
                        "format": "int"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Salaire"
                }
            },
            "SousCategorieRequestBody": {
                "title": "SousCategorieRequestBody",
                "description": "SousCategorie model",
                "properties": {
                    "libelle": {
                        "title": "string",
                        "description": "SousCategorie libelle",
                        "type": "string",
                        "format": "string"
                    },
                    "categories": {
                        "title": "string",
                        "description": "categories id",
                        "type": "integer",
                        "format": "int"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Contrat"
                }
            },
            "TypeExpRequestBody": {
                "title": "TypeExpRequestBody",
                "description": "TypeExp model",
                "properties": {
                    "libelle": {
                        "title": "libelle",
                        "description": "TypeExp libelle",
                        "type": "string",
                        "format": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "TypeExp"
                }
            },
            "UserRequestBody": {
                "title": "UserRequestBody",
                "description": "User model",
                "properties": {
                    "email": {
                        "title": "email",
                        "description": "User email",
                        "type": "string",
                        "format": "string",
                        "example": "admin@admin.com"
                    },
                    "password": {
                        "title": "password",
                        "description": "User password",
                        "type": "string",
                        "format": "string"
                    },
                    "matricule_hr": {
                        "title": "matricule_hr",
                        "description": "User matricule_hr",
                        "type": "string",
                        "format": "string"
                    },
                    "nom": {
                        "title": "nom",
                        "description": "User nom",
                        "type": "string",
                        "format": "string"
                    },
                    "prenom": {
                        "title": "prenom",
                        "description": "User prenom",
                        "type": "string",
                        "format": "string"
                    },
                    "adresse": {
                        "title": "adresse",
                        "description": "User adresse",
                        "type": "string",
                        "format": "string"
                    },
                    "num_telephone": {
                        "title": "numéro_téléphone",
                        "description": "User numéro_telephone",
                        "type": "string",
                        "format": "string"
                    },
                    "cin_passport": {
                        "title": "cin_passport",
                        "description": "User cin_passport",
                        "type": "string",
                        "format": "string"
                    },
                    "etat_civil": {
                        "title": "etat_civil",
                        "description": "User etat_civil",
                        "type": "string",
                        "format": "string"
                    },
                    "image": {
                        "title": "image",
                        "description": "User image",
                        "type": "string",
                        "format": "string"
                    },
                    "date_naissance": {
                        "title": "date_naissance",
                        "description": "User date_naissance",
                        "type": "string",
                        "format": "string",
                        "example": "2019-10-02T14:01:17+00:00"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            }
        },
        "requestBodies": {
            "Equipe": {
                "description": "Equipe object that needs to be added to the store",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/EquipeRequestBody"
                        }
                    }
                }
            },
            "User": {
                "description": "User object that needs to be added to the store",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UserRequestBody"
                        }
                    }
                }
            },
            "Poste": {
                "description": "Poste object that needs to be added to the store",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/PosteRequestBody"
                        }
                    }
                }
            },
            "Departement": {
                "description": "Departement object that needs to be added to the store",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/DepartementRequestBody"
                        }
                    }
                }
            },
            "Document": {
                "description": "Document object that needs to be added to the store",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/DocumentRequestBody"
                        }
                    }
                }
            },
            "Diplome": {
                "description": "Diplome object that needs to be added to the store",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/DiplomeRequestBody"
                        }
                    }
                }
            },
            "Experience": {
                "description": "Experience object that needs to be added to the store",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ExperienceRequestBody"
                        }
                    }
                }
            },
            "TypeExp": {
                "description": "TypeExp object that needs to be added to the store",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/TypeExpRequestBody"
                        }
                    }
                }
            },
            "Contrat": {
                "description": "Conttat object that needs to be added to the store",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ContratRequestBody"
                        }
                    }
                }
            },
            "Salaire": {
                "description": "Salaire object that needs to be added to the store",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/SalaireRequestBody"
                        }
                    }
                }
            },
            "Categorie": {
                "description": "Categorie object that needs to be added to the store",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/CategorieRequestBody"
                        }
                    }
                }
            },
            "SousCategorie": {
                "description": "SousCategorie object that needs to be added to the store",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/SousCategorieRequestBody"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "Password Based": {
                "type": "http",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}